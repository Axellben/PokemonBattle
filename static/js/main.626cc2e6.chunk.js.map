{"version":3,"sources":["PokeCard.js","PokeHand.js","PokeBattle.js","App.js","index.js"],"names":["PokeCard","this","props","name","img","exp","className","style","textTransform","src","alt","React","Component","PokeHand","pokemons","console","log","map","pokemon","id","base_experience","sprites","front_default","key","PokeBattle","state","hand1","hand2","exp1","exps2","i","randomId","Math","floor","random","apiUrl","fetch","response","json","push","randomHand","reduce","exp2","setState","msg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAiBeA,G,6KAbH,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,KAAMC,EADP,EACOA,IAAKC,EADZ,EACYA,IAEnB,OACE,yBAAKC,UAAU,YACb,wBAAIC,MAAO,CAAEC,cAAe,eAAiBL,GAC7C,yBAAKM,IAAKL,EAAKM,IAAI,gBACnB,kCAAQL,Q,GAROM,IAAMC,YCwBdC,G,6KAtBH,IACAC,EAAab,KAAKC,MAAlBY,SAGR,OAFAC,QAAQC,IAAIF,GAGV,yBAAKR,UAAU,YACZQ,EAASG,KAAI,SAACC,GACb,OACE,kBAAC,EAAD,CACEf,KAAMe,EAAQf,KACdgB,GAAID,EAAQC,GACZd,IAAKa,EAAQE,gBACbhB,IAAKc,EAAQG,QAAQC,cACrBC,IAAKL,EAAQC,a,GAdJR,IAAMC,YC6DdY,E,kDA7Db,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CAAEC,MAAO,GAAIC,MAAO,GAAIC,KAAM,EAAGC,MAAO,GAFpC,E,6LAMbf,EAAW,GACNgB,EAAI,E,YAAGA,EAAI,G,wBACdC,EAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3BC,E,4CAA8CJ,G,SAC3BK,MAAMD,G,cAAvBE,E,iBACaA,EAASC,O,QAAtBA,E,OACAnB,EAAuCmB,EAAvCnB,GAAIhB,EAAmCmC,EAAnCnC,KAAMiB,EAA6BkB,EAA7BlB,gBAAiBC,EAAYiB,EAAZjB,QAC7BH,EAAU,CAAEC,KAAIhB,OAAMiB,kBAAiBC,WAC3CP,EAASyB,KAAKrB,G,QAPOY,I,gDAShBhB,G,kRAIWb,KAAKuC,a,cAAnBd,E,gBACczB,KAAKuC,a,OAAnBb,E,OACAC,EAAOF,EAAMe,QACf,SAACpC,EAAKa,GAAN,OAAmBb,EAAOa,EAAQE,kBAClC,GAEEsB,EAAOf,EAAMc,QACf,SAACpC,EAAKa,GAAN,OAAmBb,EAAOa,EAAQE,kBAClC,GAEFnB,KAAK0C,SAAS,CACZjB,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNc,KAAMA,I,qIAIA,IAAD,EAC8BzC,KAAKwB,MAAlCC,EADD,EACCA,MAAOC,EADR,EACQA,MAAOC,EADf,EACeA,KAAMc,EADrB,EACqBA,KAExBE,EAAM,GAUV,OARIhB,GAAQc,IAERE,EADEhB,EAAOc,EACH,iBAEA,kBAKR,6BACE,kBAAC,EAAD,CAAU5B,SAAUY,IACpB,4BAAKkB,GACL,kBAAC,EAAD,CAAU9B,SAAUa,S,GAxDHhB,IAAMC,WCYhBiC,G,6KATX,OACE,6BACE,8CACA,kBAAC,EAAD,W,GALUlC,IAAMC,YCAxBkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.626cc2e6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PokeCard.css\";\n\nclass PokeCard extends React.Component {\n  render() {\n    const { name, img, exp } = this.props;\n\n    return (\n      <div className=\"PokeCard\">\n        <h3 style={{ textTransform: \"capitalize\" }}>{name}</h3>\n        <img src={img} alt=\"Pokemon Art\" />\n        <p>EXP:{exp}</p>\n      </div>\n    );\n  }\n}\n\nexport default PokeCard;\n","import React from \"react\";\nimport PokeCard from \"./PokeCard\";\nimport \"./PokeHand.css\";\n\nclass PokeHand extends React.Component {\n  render() {\n    const { pokemons } = this.props;\n    console.log(pokemons);\n\n    return (\n      <div className=\"PokeHand\">\n        {pokemons.map((pokemon) => {\n          return (\n            <PokeCard\n              name={pokemon.name}\n              id={pokemon.id}\n              exp={pokemon.base_experience}\n              img={pokemon.sprites.front_default}\n              key={pokemon.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PokeHand;\n","import React from \"react\";\nimport PokeHand from \"./PokeHand\";\n\nclass PokeBattle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hand1: [], hand2: [], exp1: 0, exps2: 0 };\n  }\n\n  async randomHand() {\n    let pokemons = [];\n    for (let i = 0; i < 5; i++) {\n      let randomId = Math.floor(Math.random() * 800);\n      let apiUrl = `https://pokeapi.co/api/v2/pokemon/${randomId}`;\n      const response = await fetch(apiUrl);\n      const json = await response.json();\n      let { id, name, base_experience, sprites } = json;\n      let pokemon = { id, name, base_experience, sprites };\n      pokemons.push(pokemon);\n    }\n    return pokemons;\n  }\n\n  async componentDidMount() {\n    let hand1 = await this.randomHand();\n    let hand2 = await this.randomHand();\n    let exp1 = hand1.reduce(\n      (exp, pokemon) => (exp += pokemon.base_experience),\n      0\n    );\n    let exp2 = hand2.reduce(\n      (exp, pokemon) => (exp += pokemon.base_experience),\n      0\n    );\n    this.setState({\n      hand1: hand1,\n      hand2: hand2,\n      exp1: exp1,\n      exp2: exp2,\n    });\n  }\n\n  render() {\n    const { hand1, hand2, exp1, exp2 } = this.state;\n\n    let msg = \"\";\n\n    if (exp1 && exp2) {\n      if (exp1 > exp2) {\n        msg = \"Player 1 win!!\";\n      } else {\n        msg = \"Player 2 win!!\";\n      }\n    }\n\n    return (\n      <div>\n        <PokeHand pokemons={hand1} />\n        <h1>{msg}</h1>\n        <PokeHand pokemons={hand2} />\n      </div>\n    );\n  }\n}\n\nexport default PokeBattle;\n","import React from \"react\";\nimport PokeBattle from \"./PokeBattle\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Pokemon Battle</h1>\n        <PokeBattle />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}